const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
require('dotenv').config();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const token = process.env.TELEGRAM_BOT_TOKEN;
if (!token) {
  console.error('–û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å TELEGRAM_BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ');
  process.exit(1);
}

const bot = new TelegramBot(token, { polling: true });
const app = express();
const PORT = process.env.PORT || 3000;

// HTML —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞
const shopPage = `
<!DOCTYPE html>
<html>
<head>
    <title>My Web Shop</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            max-width: 600px;
            margin: auto;
            background-color: #f5f5f5;
        }
        .header {
            text-align: center;
            padding: 20px 0;
        }
        .product {
            background: white;
            border-radius: 8px;
            padding: 15px;
            margin: 15px 0;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        .product h2 {
            margin-top: 0;
            color: #2563eb;
        }
        .price {
            color: #2563eb;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω!</h1>
        <p>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –Ω–∞—à–µ–≥–æ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞</p>
    </div>

    <div class="product">
        <h2>iPhone 15 Pro</h2>
        <p class="price">$1199</p>
        <p>–°–∞–º–∞—è –º–æ—â–Ω–∞—è –∫–∞–º–µ—Ä–∞ Apple —Å –ø–µ—Ä–µ–¥–æ–≤—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º A16 Bionic</p>
    </div>

    <div class="product">
        <h2>Samsung Galaxy S23 Ultra</h2>
        <p class="price">$1399</p>
        <p>–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω —Å –∫–∞–º–µ—Ä–æ–π 200 –ú–ü –∏ —É–ª—É—á—à–µ–Ω–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º Snapdragon 8 Gen 2</p>
    </div>

    <div class="product">
        <h2>Apple Watch Ultra 2</h2>
        <p class="price">$799</p>
        <p>–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —á–∞—Å—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∑–¥–æ—Ä–æ–≤—å—è –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
    </div>

    <div class="product">
        <h2>MacBook Air M2</h2>
        <p class="price">$1299</p>
        <p>–£–ª—å—Ç—Ä–∞—Ç–æ–Ω–∫–∏–π –Ω–æ—É—Ç–±—É–∫ —Å —á–∏–ø–æ–º M2 –∏ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Ä–∞–±–æ—Ç—ã</p>
    </div>

    <script>
        // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram WebApp
        if (window.TelegramWebviewProxy) {
            TelegramWebviewProxy.sendEvent("page_loaded");
        }
    </script>
</body>
</html>
`;

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    
    const options = {
        reply_markup: {
            inline_keyboard: [[{
                text: 'üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω',
                web_app: { 
                    url: process.env.WEB_APP_URL || 'https://your-project.glitch.me/shop ' 
                }
            }]]
        }
    };
    
    bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º